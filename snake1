#include<iostream>
using namespace std;
int eat(int grow, int** bodi, int razmer, )
{
	int poyavlenie = 1;
	int i = 0;
	if (razmer == 89)
		while (1)
		{
			int xr = rand(9);
			int yr = rand(10);
			if (xr == bodi[i][0] || yr == bodi[i][1])
			{
				i++;
				poyavlenie = 0;
				continue;
			}
			else
			{
				pole[xr][yr] = pit;
				break;
			}
		}
}
int game over(int** pole, int** bodi, int** golova, int** xvost)
{
	if (golova[0][0] == xmax || golova[0][0] == xmin || golova[0][1] == ymax || golova[0][1] == ymin)
	{
		cout«"game over"
			system("payse");
		exit(0);
	}
	for (int i = 0; i < razmer - 2; i++)
	{
		if (golova[0][0] == bodi[i][0] && golova[0][1] == bodi[i][1])
		{
			cout«"game over";
			exit(0);
		}
	}
}

int povorot()
{
	case(klav)
	case (->): {naprav = 1; break}
	case (niz): {naprav = 2; break}
	case(< -): {naprav = 3; break; }
	case(verx): {napvar = 4; break; }
}
int move(int naprav, int** pole, int** golova, int** xvost)
{
	int god, evil;
	case(naprav)
	case(1): {pole[golova[0][0]++][golova[0][1]] = 11;
		for (int i = razmer - 2; i > 0; i++)
		{
			xvost[0][0] = bodi[razmer - 2][0]
				xvost[0][1] = bodi[razmer - 2][1]
				god = bodi[i - 1][0];
			bodi[i - 1][0] = bodi[i][0];
			evil = bodi[i - 1][1];
			bodi[i - 1][1] = bodi[i][1];
		}
		break;
	}
	case(2): {pole[golova[0][0]][golova[0][1]++] = 11;
		for (int i = razmer - 2; i > 0; i++)
		{
			xvost[0][0] = bodi[razmer - 2][0]
				xvost[0][1] = bodi[razmer - 2][1]
				god = bodi[i - 1][0];
			bodi[i - 1][0] = bodi[i][0];
			evil = bodi[i - 1][1];
			bodi[i - 1][1] = bodi[i][1];
		}
		break;
	}
	case(3): {pole[golova[0][0]--][golova[0][1]] = 11;
		for (int i = razmer - 2; i > 0; i++)
		{
			xvost[0][0] = bodi[razmer - 2][0]
				xvost[0][1] = bodi[razmer - 2][1]
				god = bodi[i - 1][0];
			bodi[i - 1][0] = bodi[i][0];
			evil = bodi[i - 1][1];
			bodi[i - 1][1] = bodi[i][1];
		}
		break;
	}
	case(4): {pole[golova[0][0]][golova[0][1]--] = 11;
		for (int i = razmer - 2; i > 0; i++)
		{
			xvost[0][0] = bodi[razmer - 2][0]
				xvost[0][1] = bodi[razmer - 2][1]
				god = bodi[i - 1][0];
			bodi[i - 1][0] = bodi[i][0];
			evil = bodi[i - 1][1];
			bodi[i - 1][1] = bodi[i][1];
		}
		break;
	}
}
int main()
{
	int gorw = 0, spead = 10000, razmer = 3, pit;
	int naprav = 1;
	sleep(10000 / razmer);
}
